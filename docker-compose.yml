services:
  postgres:
    image: postgres:15-alpine
    container_name: betting-platform-db
    environment:
      POSTGRES_USER: analyst_user
      POSTGRES_PASSWORD: analyst_password
      POSTGRES_DB: analyst_platform
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U analyst_user -d analyst_platform"]
      interval: 10s
      timeout: 5s
      retries: 5

  adminer:
    image: adminer:latest
    container_name: betting-platform-adminer
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    environment:
      ADMINER_DEFAULT_SERVER: postgres

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: betting-platform-backend
    environment:
      POSTGRES_USER: analyst_user
      POSTGRES_PASSWORD: analyst_password
      POSTGRES_DB: analyst_platform
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      API_KEY: dev-key
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    container_name: betting-platform-frontend
    environment:
      - VITE_API_URL=http://localhost:8000/api
      - VITE_API_KEY=dev-key
    ports:
      - "3000:80"
    depends_on:
      - backend

volumes:
  postgres_data:
